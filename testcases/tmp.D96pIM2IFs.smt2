(push 1)
(set-info :source | fuzzsmt 0.3 |)
(set-logic  QF_ABV)
(set-info :status unknown)
(declare-fun v21490 () (_ BitVec 5))
(declare-fun a21491 () (Array (_ BitVec 5) (_ BitVec 6)))
(assert
(let ((e21492 (_ bv0 1)))
(let ((e21493 (_ bv2 5)))
(let ((e21494 (bvadd v21490 e21493)))
(let ((e21495 (bvnot e21493)))
(let ((e21496 (ite (= (_ bv1 1) ((_ extract 0 0) e21492)) e21493 e21494)))
(let ((e21497 (select a21491 e21496)))
(let ((e21498 (select a21491 e21496)))
(let ((e21499 (bvnand e21496 ((_ zero_extend 4) e21492))))
(let ((e21500 (bvadd e21498 ((_ sign_extend 1) e21495))))
(let ((e21501 ((_ repeat 2) e21497)))
(let ((e21502 (ite (bvugt ((_ sign_extend 1) e21493) e21500)(_ bv1 1) (_ bv0 1))))
(let ((e21503 (bvor ((_ zero_extend 7) v21490) e21501)))
(let ((e21504 (ite (bvsle ((_ sign_extend 4) e21502) e21493)(_ bv1 1) (_ bv0 1))))
(let ((e21505 (ite (bvuge e21494 e21494)(_ bv1 1) (_ bv0 1))))
(let ((e21506 (bvule ((_ sign_extend 4) e21492) e21496)))
(let ((e21507 (bvsle ((_ sign_extend 4) e21492) e21494)))
(let ((e21508 (bvugt ((_ sign_extend 5) e21502) e21500)))
(let ((e21509 (bvuge v21490 ((_ zero_extend 4) e21504))))
(let ((e21510 (bvsgt ((_ zero_extend 4) e21502) e21495)))
(let ((e21511 (bvult e21499 ((_ sign_extend 4) e21502))))
(let ((e21512 (bvslt e21500 ((_ zero_extend 5) e21502))))
(let ((e21513 (bvsgt v21490 ((_ zero_extend 4) e21505))))
(let ((e21514 (bvsle e21501 ((_ zero_extend 7) e21494))))
(let ((e21515 (bvsge ((_ zero_extend 1) e21494) e21497)))
(let ((e21516 (bvuge ((_ sign_extend 7) v21490) e21503)))
(let ((e21517 (bvslt e21495 e21494)))
(let ((e21518 (bvsgt e21494 e21495)))
(let ((e21519 (bvslt ((_ zero_extend 6) e21500) e21503)))
(let ((e21520 (bvsge ((_ sign_extend 4) e21505) e21495)))
(let ((e21521 (bvule e21497 ((_ zero_extend 5) e21502))))
(let ((e21522 (bvugt e21501 e21503)))
(let ((e21523 (bvuge e21501 ((_ sign_extend 7) e21493))))
(let ((e21524 (bvult e21500 ((_ sign_extend 1) e21493))))
(let ((e21525 (bvslt ((_ zero_extend 7) e21499) e21503)))
(let ((e21526 (bvsle e21496 e21495)))
(let ((e21527 (bvule e21501 ((_ sign_extend 11) e21492))))
(let ((e21528 (bvule e21497 ((_ zero_extend 1) e21496))))
(let ((e21529 (= e21500 e21497)))
(let ((e21530 (bvslt ((_ sign_extend 7) e21493) e21503)))
(let ((e21531 (bvsge e21501 ((_ zero_extend 7) e21496))))
(let ((e21532 (distinct e21496 e21499)))
(let ((e21533 (bvsle ((_ sign_extend 7) e21496) e21501)))
(let ((e21534 (bvuge e21497 ((_ zero_extend 1) e21494))))
(let ((e21535 (bvuge ((_ zero_extend 5) e21502) e21500)))
(let ((e21536 (bvsge ((_ sign_extend 11) e21502) e21503)))
(let ((e21537 (bvule ((_ zero_extend 6) e21500) e21503)))
(let ((e21538 (= e21496 ((_ zero_extend 4) e21502))))
(let ((e21539 (bvsle ((_ sign_extend 7) e21495) e21501)))
(let ((e21540 (bvslt e21500 ((_ sign_extend 1) e21493))))
(let ((e21541 (bvslt e21496 e21496)))
(let ((e21542 (bvsle ((_ zero_extend 1) e21494) e21497)))
(let ((e21543 (bvslt v21490 v21490)))
(let ((e21544 (bvslt ((_ zero_extend 5) e21492) e21497)))
(let ((e21545 (distinct e21493 ((_ sign_extend 4) e21505))))
(let ((e21546 (= e21499 e21493)))
(let ((e21547 (bvule e21498 ((_ sign_extend 1) e21493))))
(let ((e21548 (and e21535 e21530)))
(let ((e21549 (= e21511 e21528)))
(let ((e21550 (not e21518)))
(let ((e21551 (and e21536 e21513)))
(let ((e21552 (and e21510 e21524)))
(let ((e21553 (xor e21533 e21521)))
(let ((e21554 (not e21541)))
(let ((e21555 (= e21537 e21546)))
(let ((e21556 (=> e21548 e21506)))
(let ((e21557 (xor e21538 e21554)))
(let ((e21558 (= e21508 e21512)))
(let ((e21559 (= e21542 e21517)))
(let ((e21560 (= e21558 e21558)))
(let ((e21561 (=> e21525 e21556)))
(let ((e21562 (and e21557 e21545)))
(let ((e21563 (and e21509 e21553)))
(let ((e21564 (not e21515)))
(let ((e21565 (xor e21523 e21520)))
(let ((e21566 (xor e21564 e21534)))
(let ((e21567 (and e21560 e21514)))
(let ((e21568 (xor e21529 e21522)))
(let ((e21569 (xor e21547 e21565)))
(let ((e21570 (and e21562 e21569)))
(let ((e21571 (=> e21561 e21561)))
(let ((e21572 (ite e21532 e21539 e21559)))
(let ((e21573 (=> e21555 e21567)))
(let ((e21574 (= e21519 e21540)))
(let ((e21575 (=> e21573 e21550)))
(let ((e21576 (not e21516)))
(let ((e21577 (ite e21575 e21527 e21526)))
(let ((e21578 (or e21574 e21531)))
(let ((e21579 (or e21578 e21577)))
(let ((e21580 (=> e21568 e21507)))
(let ((e21581 (=> e21579 e21544)))
(let ((e21582 (=> e21552 e21566)))
(let ((e21583 (or e21582 e21551)))
(let ((e21584 (=> e21549 e21570)))
(let ((e21585 (not e21563)))
(let ((e21586 (or e21572 e21584)))
(let ((e21587 (= e21543 e21543)))
(let ((e21588 (xor e21583 e21581)))
(let ((e21589 (=> e21587 e21586)))
(let ((e21590 (or e21580 e21589)))
(let ((e21591 (= e21571 e21588)))
(let ((e21592 (and e21585 e21591)))
(let ((e21593 (ite e21576 e21590 e21576)))
(let ((e21594 (=> e21592 e21592)))
(let ((e21595 (= e21594 e21594)))
(let ((e21596 (not e21593)))
(let ((e21597 (=> e21595 e21596)))
e21597
)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(pop 1)
