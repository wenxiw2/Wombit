(push 1)
(set-info :source | fuzzsmt 0.3 |)
(set-logic  QF_ABV)
(set-info :status unknown)
(declare-fun v0 () (_ BitVec 5))
(declare-fun a1 () (Array (_ BitVec 12) (_ BitVec 6)))
(declare-fun a2 () (Array (_ BitVec 2) (_ BitVec 15)))
(declare-fun a3 () (Array (_ BitVec 2) (_ BitVec 7)))
(assert
(let ((e4 (_ bv7 3)))
(let ((e5 (_ bv10 4)))
(let ((e6 (bvneg e4)))
(let ((e7 (bvshl v0 v0)))
(let ((e8 (bvudiv ((_ sign_extend 2) e6) e7)))
(let ((e9 ((_ zero_extend 7) e5)))
(let ((e10 (store a2 ((_ extract 1 0) e5) ((_ sign_extend 11) e5))))
(let ((e11 (select a2 ((_ extract 3 2) e7))))
(let ((e12 (bvneg e11)))
(let ((e13 (bvsmod ((_ zero_extend 1) e6) e5)))
(let ((e14 (ite (bvsle e7 v0)(_ bv1 1) (_ bv0 1))))
(let ((e15 (bvneg e9)))
(let ((e16 (bvadd ((_ zero_extend 4) e14) e8)))
(let ((e17 (bvurem v0 e7)))
(let ((e18 (ite (bvult ((_ zero_extend 2) e4) v0)(_ bv1 1) (_ bv0 1))))
(let ((e19 (bvule ((_ sign_extend 8) e4) e9)))
(let ((e20 (bvsge e16 ((_ zero_extend 4) e14))))
(let ((e21 (bvsgt e12 ((_ sign_extend 4) e15))))
(let ((e22 (bvult e11 ((_ zero_extend 10) e16))))
(let ((e23 (bvsgt v0 ((_ zero_extend 1) e13))))
(let ((e24 (bvult e12 e11)))
(let ((e25 (distinct v0 ((_ sign_extend 1) e13))))
(let ((e26 (bvult e15 ((_ zero_extend 6) e17))))
(let ((e27 (bvult e11 e12)))
(let ((e28 (bvslt e9 ((_ sign_extend 6) e16))))
(let ((e29 (bvult e16 e17)))
(let ((e30 (bvugt v0 v0)))
(let ((e31 (bvugt e15 ((_ zero_extend 6) v0))))
(let ((e32 (= e9 ((_ sign_extend 8) e6))))
(let ((e33 (bvsgt ((_ zero_extend 4) e18) e8)))
(let ((e34 (bvugt e18 e18)))
(let ((e35 (distinct e9 ((_ zero_extend 6) e8))))
(let ((e36 (= e11 ((_ zero_extend 11) e13))))
(let ((e37 (bvsge ((_ sign_extend 10) e18) e15)))
(let ((e38 (bvule ((_ zero_extend 1) e5) e7)))
(let ((e39 (and e36 e33)))
(let ((e40 (xor e37 e37)))
(let ((e41 (not e27)))
(let ((e42 (or e23 e24)))
(let ((e43 (=> e26 e28)))
(let ((e44 (= e22 e34)))
(let ((e45 (or e42 e35)))
(let ((e46 (ite e41 e32 e43)))
(let ((e47 (xor e39 e44)))
(let ((e48 (and e46 e29)))
(let ((e49 (= e45 e47)))
(let ((e50 (and e21 e30)))
(let ((e51 (xor e48 e31)))
(let ((e52 (= e38 e25)))
(let ((e53 (xor e51 e20)))
(let ((e54 (ite e19 e19 e50)))
(let ((e55 (ite e52 e54 e53)))
(let ((e56 (or e40 e49)))
(let ((e57 (and e56 e56)))
(let ((e58 (xor e55 e57)))
(let ((e59 (and e58 (not (= e5 (_ bv0 4))))))
(let ((e60 (and e59 (not (= e5 (bvnot (_ bv0 4)))))))
(let ((e61 (and e60 (not (= e7 (_ bv0 5))))))
e61
)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(pop 1)
